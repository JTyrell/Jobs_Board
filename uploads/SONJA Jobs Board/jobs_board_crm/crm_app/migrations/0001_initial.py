# Generated by Django 5.2.3 on 2025-07-23 14:13

import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AutomationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('trigger_type', models.CharField(choices=[('lead_created', 'Lead Created'), ('lead_status_changed', 'Lead Status Changed'), ('application_submitted', 'Application Submitted'), ('task_overdue', 'Task Overdue'), ('opportunity_stage_changed', 'Opportunity Stage Changed'), ('time_based', 'Time Based')], max_length=30)),
                ('trigger_conditions', models.JSONField(default=dict, help_text='Conditions for triggering this rule')),
                ('action_type', models.CharField(choices=[('send_email', 'Send Email'), ('create_task', 'Create Task'), ('update_lead_status', 'Update Lead Status'), ('assign_to_user', 'Assign to User'), ('send_notification', 'Send Notification'), ('webhook', 'Webhook')], max_length=20)),
                ('action_parameters', models.JSONField(default=dict, help_text='Parameters for the action')),
                ('is_active', models.BooleanField(default=True)),
                ('delay_minutes', models.PositiveIntegerField(default=0, help_text='Delay before executing action')),
                ('times_triggered', models.PositiveIntegerField(default=0)),
                ('last_triggered', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CommunicationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('communication_type', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone Call'), ('meeting', 'Meeting'), ('sms', 'SMS'), ('note', 'Internal Note'), ('linkedin', 'LinkedIn Message'), ('other', 'Other')], max_length=20)),
                ('direction', models.CharField(choices=[('inbound', 'Inbound'), ('outbound', 'Outbound')], default='outbound', max_length=10)),
                ('subject', models.CharField(blank=True, max_length=200, null=True)),
                ('content', models.TextField()),
                ('duration_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('meeting_location', models.CharField(blank=True, max_length=200, null=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateTimeField(blank=True, null=True)),
                ('follow_up_completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('template_type', models.CharField(choices=[('welcome', 'Welcome'), ('follow_up', 'Follow Up'), ('proposal', 'Proposal'), ('rejection', 'Rejection'), ('interview_invitation', 'Interview Invitation'), ('job_alert', 'Job Alert'), ('newsletter', 'Newsletter'), ('custom', 'Custom')], default='custom', max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('body_text', models.TextField(help_text='Plain text version')),
                ('body_html', models.TextField(help_text='HTML version')),
                ('variables', models.TextField(blank=True, help_text='JSON format: Available variables for this template', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('company', models.CharField(blank=True, max_length=200, null=True)),
                ('job_title', models.CharField(blank=True, max_length=100, null=True)),
                ('lead_type', models.CharField(choices=[('job_seeker', 'Job Seeker'), ('employer', 'Employer'), ('recruiter', 'Recruiter')], max_length=20)),
                ('status', models.CharField(choices=[('new', 'New'), ('contacted', 'Contacted'), ('qualified', 'Qualified'), ('proposal', 'Proposal Sent'), ('negotiation', 'In Negotiation'), ('converted', 'Converted'), ('lost', 'Lost'), ('inactive', 'Inactive')], default='new', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('source', models.CharField(choices=[('website', 'Website'), ('referral', 'Referral'), ('social_media', 'Social Media'), ('email_campaign', 'Email Campaign'), ('job_board', 'Job Board'), ('networking', 'Networking'), ('cold_call', 'Cold Call'), ('other', 'Other')], default='website', max_length=20)),
                ('industry', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('conversion_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_contacted', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Opportunity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('opportunity_type', models.CharField(choices=[('job_placement', 'Job Placement'), ('service_sale', 'Service Sale'), ('subscription', 'Subscription'), ('consulting', 'Consulting'), ('other', 'Other')], default='job_placement', max_length=20)),
                ('value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('probability', models.PositiveIntegerField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('expected_close_date', models.DateField()),
                ('actual_close_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('open', 'Open'), ('won', 'Won'), ('lost', 'Lost'), ('suspended', 'Suspended')], default='open', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Opportunities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Pipeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('pipeline_type', models.CharField(choices=[('sales', 'Sales'), ('recruitment', 'Recruitment'), ('custom', 'Custom')], default='sales', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PipelineStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('order', models.PositiveIntegerField()),
                ('probability', models.PositiveIntegerField(default=0, help_text='Success probability percentage', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_final', models.BooleanField(default=False, help_text='Is this a final stage (won/lost)?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['pipeline', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('task_type', models.CharField(choices=[('call', 'Call'), ('email', 'Send Email'), ('meeting', 'Schedule Meeting'), ('follow_up', 'Follow Up'), ('research', 'Research'), ('proposal', 'Prepare Proposal'), ('other', 'Other')], default='other', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('overdue', 'Overdue')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('due_date', models.DateTimeField()),
                ('estimated_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('actual_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('completion_notes', models.TextField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['due_date', '-priority'],
            },
        ),
    ]
